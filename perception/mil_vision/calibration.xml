<?xml version="1.0"?>
<!-- the stereo front tf is based on the right camera -->
<opencv_storage>
<M1 type_id="opencv-matrix"> <!-- left camera intrinsics -->
  <rows>3</rows>
  <cols>3</cols>
  <dt>d</dt>
  <data>
    702.1922        0.  476.5935
          0.  699.2620  298.8085
          0.        0.         1.
  </data>
</M1>
<D1 type_id="opencv-matrix"> <!-- left camera distortion -->
  <rows>1</rows>
  <cols>5</cols>
  <dt>d</dt>
  <data> <!-- k1 k2 p1 p2 k3  (k:radial p:tangential) -->
    -0.1701    0.1220    -8.5339e-04    -0.0012    -0.0304
  </data>
</D1>
<M2 type_id="opencv-matrix"> <!-- right camera intrinsics -->
  <rows>3</rows>
  <cols>3</cols>
  <dt>d</dt>
  <data>
  704.5182         0  476.1918
         0  701.7624  300.8320
         0         0    1.0000
  </data>
</M2>
<D2 type_id="opencv-matrix"> <!-- right camera distortion -->
  <rows>1</rows>
  <cols>5</cols>
  <dt>d</dt>
  <data> <!-- k1 k2 p1 p2 k3  (k:radial p:tangential) -->
  -0.1770    0.1433    -3.1992e-04    -0.0014    -0.0434
  </data>
</D2>
<R1 type_id="opencv-matrix"> <!--  left camera extrinsic orientation -->
  <rows>3</rows>
  <cols>3</cols>
  <dt>d</dt>
  <data>
    1 0 0
    0 1 0
    0 0 1
  </data></R1>
<R2 type_id="opencv-matrix"> <!--  right camera extrinsic orientation -->
  <rows>3</rows>
  <cols>3</cols>
  <dt>d</dt>
  <data>
    1 0 0
    0 1 0
    0 0 1
  </data>
</R2>
<P1 type_id="opencv-matrix"> <!--  left camera projection matrix -->
  <rows>3</rows>
  <cols>4</cols>
  <dt>d</dt>
  <data>
    702.1922         0  476.5935 -140.4384
           0  699.2620  298.8085         0
           0         0    1.0000         0
  </data>
</P1>
<P2 type_id="opencv-matrix"> <!--  right camera projection matrix -->
  <rows>3</rows>
  <cols>4</cols>
  <dt>d</dt>
  <data>
    704.5182         0  476.1918         0
           0  701.7624  300.8320         0
           0         0    1.0000         0
  </data>
</P2>
<Q type_id="opencv-matrix">
  <rows>4</rows>
  <cols>4</cols>
  <dt>d</dt>
  <data>
    <!-- this is from the exFAST example data calibration, I'm not sure how
     to find the equivalent matrix for navigator yet -->
    1. 0. 0. -3.3994384384155273e+02 0. 1. 0. -2.2540025138854980e+02 0.
    0. 0. 5.4581318104785521e+02 0. 0. -9.1620188198129178e+00 0.</data></Q>
<size type_id="opencv-matrix">
  <rows>2</rows>
  <cols>1</cols>
  <dt>i</dt>
  <data>
    960 600</data></size>
</opencv_storage>
